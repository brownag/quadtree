% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qt_plot.R
\name{qt_plot}
\alias{qt_plot}
\title{Plot a quadtree object}
\usage{
qt_plot(
  qt,
  colors = NULL,
  nb = FALSE,
  border_col = "black",
  xlim = NULL,
  ylim = NULL,
  crop = FALSE,
  na_col = "white",
  ...
)
}
\arguments{
\item{qt}{a \code{quadtree} object}

\item{colors}{character vector; the colors that will be used to create the color ramp used in the plot. If no argument is provided, \code{terrain.colors(100,rev=TRUE)} is used.}

\item{nb}{boolean; whether or not to include lines connecting neighboring cells}

\item{border_col}{character; the color to use for the cell borders. Use 'transparent' if you don't want borders to be shown}

\item{xlim}{two element numeric vector; defines the minimum and maximum values of the x axis. Ignored if \code{crop} is \code{TRUE}.}

\item{ylim}{two element numeric vector; defines the minimum and maximum values of the y axis. Ignored if \code{crop} is \code{TRUE}.}

\item{crop}{boolean; if \code{TRUE}, only displays the extent of the original raster, thus ignoring any of the NA cells that were added to pad the raster before making the quadtree. If \code{TRUE}, \code{xlim} and \code{ylim} are ignored}

\item{na_col}{character; the color to use for NA cells}

\item{...}{arguments passed to the default \code{plot} function}
}
\description{
Plot a quadtree object
}
\examples{
# create raster of random values
nrow = 57
ncol = 75
rast = raster(matrix(runif(nrow*ncol), nrow=nrow, ncol=ncol), xmn=0, xmx=ncol, ymn=0, ymx=nrow)

# create quadtree
qt1 = qt_create(rast, range_limit = .9, adj_type="expand")

# -----------
# DEFAULT
# -----------
qt_plot(qt1) #default - no additional parameters provided

# -----------
# CHANGE PLOT EXTENT
# -----------
# note that additional parameters like 'main', 'xlab', 'ylab', etc. will be
# passed to the default 'plot()' function
qt_plot(qt1, crop=TRUE, main="cropped") #crop extent to the original extent of the raster
qt_plot(qt1, xlim = c(30,50), ylim = c(10,20), main="zoomed in") 

# -----------
# COLORS
# -----------
# change border color
qt_plot(qt1, border_col="transparent") #no borders
qt_plot(qt1, border_col="gray60")

# change color palette
qt_plot(qt1, colors=c("blue", "yellow", "red"))
qt_plot(qt1, colors=hcl.colors(100))
qt_plot(qt1, colors=c("black", "white"))

# change color of NA cells
qt_plot(qt1, na_col="pink")

# -----------
# SHOW NEIGHBOR CONNECTIONS
# -----------
qt_plot(qt1, nb=TRUE, border_col="gray60")
}
