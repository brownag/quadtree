% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lcp.R
\name{lcp_summary}
\alias{lcp_summary}
\title{Show a summary matrix of all LCPs currently calculated}
\usage{
\S4method{lcp_summary}{LcpFinder}(x)
}
\arguments{
\item{x}{an LCP finder object created using \code{\link{lcp_finder}()}}
}
\value{
Returns a 9-column matrix with one row for each LCP (and therefore
  one row per cell). The columns are as follows: 
  \itemize{ 
     \item{\code{id}: }{the ID of the destination cell}
     \item{\code{xmin, xmax, ymin, ymax}: }{the extent of the destination cell} 
     \item{\code{value}: }{the value of the destination cell}
     \item{\code{area}: }{the area of the destination cell}
     \item{\code{lcp_cost}: }{the cumulative cost of the LCP to this cell}
     \item{\code{lcp_dist}: }{the cumulative distance of the LCP to this cell -
     note that this is not straight-line distance, but instead the distance
     along the path} }
}
\description{
Given an \code{\link{LcpFinder}} object, returns a matrix that
  summarizes all of the LCPs that have already been calculated by the LCP
  finder.
}
\details{
Note that this function returns \strong{all} of the paths that have
  been calculated. As explained in the documentation for
  \code{\link{lcp_finder}()}, finding one LCP likely involves finding other
  LCPs as well. Thus, even if the LCP finder has been used to find one LCP,
  others have most likely been calculated. This function returns all of the
  LCPs that have been calculated so far.
}
\examples{
library(raster)

# create a quadtree
data(habitat)
rast = habitat
qt = quadtree(rast, split_threshold=.1, adj_type="expand")

start_pt = c(19000,25000)
end_pt = c(33015,38162)

# find LCP from 'start_pt' to 'end_pt'
lcpf = lcp_finder(qt, start_pt)
lcp = find_lcp(lcpf, end_pt)

# retrieve ALL the paths that have been calculated
paths = lcp_summary(lcpf)

# put points in each of the cells to which an LCP has been calculated
plot(qt, crop=TRUE, na_col=NULL, border_col="gray60")
points((paths$xmin + paths$xmax)/2, (paths$ymin + paths$ymax)/2, pch=16, col="black", cex=.4)
points(rbind(start_pt, end_pt), col=c("red", "blue"), pch=16)
}
\seealso{
\code{\link{lcp_finder}()} creates the \code{\link{LcpFinder}}
  object used as input to this function. \code{\link{find_lcp}()} returns the
  LCP between two points. \code{\link{find_lcps}()} calculates all LCPs whose
  cost-distance is less than some value.
}
