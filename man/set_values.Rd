% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_values.R
\name{set_values}
\alias{set_values}
\alias{set_values,Quadtree,ANY,numeric-method}
\title{Change values of \code{\link{Quadtree}} cells}
\usage{
\S4method{set_values}{Quadtree,ANY,numeric}(x, y, z)
}
\arguments{
\item{x}{A \code{\link{Quadtree}}}

\item{y}{A two-column matrix representing point coordinates. First column
contains the x-coordinates, second column contains the y-coordinates}

\item{z}{A numeric vector the same length as the number of rows of
\code{y}. The values of the cells containing \code{y} will be changed
to the corresponding value in \code{z}.}
}
\value{
No return value
}
\description{
Given a \code{\link{Quadtree}} a set of points and a vector of
  new values, changes the value of the quadtree cells containing the points
  to the corresponding value
}
\details{
Note that it is entirely possible for \code{y} to contain multiple points
that all fall within the same cell. The values are changed in the order
given, so in this case the cell will take on the \emph{last} value given for
that cell.

Also note that the structure of the quadtree will not be changed - only the
cell values will change.
}
\examples{
data(habitat)

# create a quadtree
qt <- quadtree(habitat, split_threshold = .1)

par(mfrow = c(1, 2))
plot(qt, main = "original")

# generate some random points, then change the values at those points
ext <- extent(qt)
pts <- cbind(runif(100, ext[1], ext[2]), runif(100, ext[3], ext[4]))
set_values(qt, pts, rep(10, 100))

# plot it out to see what happened
plot(qt, main = "after modification")
}
\seealso{
\code{\link{transform_values}()} can be used to transform the
  existing values of all cells using a function
}
